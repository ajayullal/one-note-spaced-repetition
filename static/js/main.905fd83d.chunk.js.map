{"version":3,"sources":["services/utils.service.ts","services/route.service.ts","services/config.ts","services/client-side-data-storage.service.ts","services/user.service.ts","services/error-handler.service.ts","services/microsoft-one-note.service.ts","services/index.ts","components/header/Header.tsx","components/error-alert/ErrorAlert.tsx","components/nav-drawer/nav-drawer.tsx","components/nav-drawer/index.ts","components/layout/layout.tsx","HOCs/withAuth.tsx","hooks/useAuth.ts","components/card-list/CardList.tsx","screens/Notebooks/Notebooks.tsx","screens/Notebooks/useBooks.ts","screens/Sections/Sections.tsx","screens/Sections/useSections.ts","hooks/useDB.ts","services/date.service.ts","services/pages.service.ts","components/pagesList/pagesList.tsx","screens/Pages/Pages.tsx","screens/Pages/usePages.ts","screens/Timer/QuitDialog.tsx","screens/Timer/Timer.tsx","screens/RecentlyRevisedPages/Pages.tsx","screens/index.ts","screens/Login/Login.tsx","screens/RecentlyEditedPages/Pages.tsx","screens/RecentlyEditedPages/usePages.ts","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["UtilsService","url","params","Object","entries","forEach","key","value","replace","srcStr","searchStr","toLowerCase","trim","split","filter","word","startsWith","length","_instance","getInstance","history","createHashHistory","routeConfig","notebooks","name","path","isHomePage","icon","Book","sections","MenuBook","login","pages","Note","timer","Timer","recentlyRevisedPages","recentlyCreatedPages","breadCrumbs","RouteService","routeName","homeRoute","find","route","routeInfo","this","getRouteInfo","serverBase","utilsService","replaceParamsInUrl","push","getRouteUrl","gotoUrl","msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","themeConfig","drawerWidth","r","ClientSideDataStorage","storage","localforage","createInstance","localStorage","setItem","removeItemSync","getItem","removeItem","UserService","_userDetails","userDetails","clientStorage","getItemSync","JSON","parse","Boolean","details","_userService","errorMessage","ErrorHandlerService","handleError","error","console","message","logout","Promise","reject","response","data","userService","window","location","routerService","axios","_axios","create","baseURL","headers","interceptors","use","dbPageId","apiEndPoints","sectionPages","content","MicrosoftOneNoteApi","_redirectUrl","_db","_dbCellDelimiter","myMSALObj","requestObj","scopes","Msal","checkAndSetPersistedBearerToken","log","tokenType","accessToken","expiresOn","renewTokenAfterMs","getTime","Date","now","setTimeout","acquireTokenPopup","tokenResponse","setBearerToken","setUserDetails","acquireTokenSilent","then","checkTokenExpiryAndRenew","onToken","catch","alert","setItemSync","stringify","handleRedirectCallback","authRedirectCallBack","loginPopup","loginResponse","token","defaults","common","resp","get","returnValue","errorHandlerService","notebookId","id","page","parentSection","displayName","sectionId","title","selfUrl","sessionDetails","rowProperties","rowProp","index","patch","resolve","getDb","db","doc","DOMParser","parseFromString","ps","Array","from","getElementsByTagName","_rows","p","textContent","startDate","startTime","minutesSpentLearning","Number","totalSessionMinutes","repetition","pageId","sectionName","contentUrl","microsoftOneNoteApi","_routerService","_utilsService","pageName","hideNavDrawer","toggleNavDrawer","classes","makeStyles","theme","createStyles","appBar","breakpoints","up","width","marginLeft","menuButton","marginRight","spacing","display","homeButton","toolbar","justifyContent","padding","paddingRight","useStyles","isLoginPage","className","account","AccountCircle","onClick","menuIcon","IconButton","color","aria-label","edge","AppBar","position","Toolbar","Typography","variant","noWrap","style","top","isLoggedIn","useEffect","marginTop","props","elevation","severity","drawer","flexShrink","drawerPaper","mixins","NavDrawer","open","onClose","children","useTheme","src","logo","height","Divider","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","root","flexGrow","link","breadcrumb","marginBottom","hide","withRouter","useState","navOpen","setNavOpen","CssBaseline","ErrorAlert","Header","List","ListItem","routeService","button","ListItemIcon","ListItemText","primary","Component","mons","redirectUrl","match","card","cursor","items","displayPropName","render","keyProp","item","gutterBottom","Grid","container","map","xs","md","Card","CardContent","component","withAuth","noteBooks","setNoteBooks","setErrorMessage","microsoftOneNoteService","getAllNoteBooks","allBooks","useBooks","noteBooksGrid","CardList","noteBook","goTo","LinearProgress","useSections","getAllSection","filteredSections","setFilteredSections","sectionsGrid","TextField","fullWidth","autoComplete","label","onChange","event","searchTxt","target","_filteredSections","section","containsWord","setDb","loading","setLoading","getAllDBRows","finally","DateService","date1","date2","_date1","_date2","diffTime","Math","abs","ceil","date","trunc","Pages","sort","page1","page2","sessions","pageTitleToSessions","row","session","daysDiffFromToday","dateService","diffFromToday","addSessionDiffFromToday","sortPages","viewPageInfo","filteredPages","links","stopPropagation","oneNoteClientUrl","href","float","setPages","getSectionPages","usePages","setFilteredPages","timerUrl","useDb","dblLoading","setSectionName","mergeDBAndPageData","useCallback","pagesService","_filteredPages","encodeURIComponent","self","onQuit","isRevision","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","Button","autoFocus","table","minWidth","pageSessions","getSessionsFromDB","allPages","pageTitle","Login","onSignInSuccess","useLayoutEffect","onSignIn","xmlns","viewBox","fill","d","x","y","Notebooks","Sections","sliderValue","setSliderValue","isTicking","setTicking","timeLeft","setTimeLeft","timeLeftPercent","setTimeLeftPercent","openQuitDialog","setQuitDialog","rows","setRows","totalMinutes","setTotalMinutes","revisionMode","setRevisionMode","timeElapsedTxt","setTimeElapsedTxt","startMillis","useRef","sliderValueRef","counterIntervalRef","pageDetails","revisionClicked","pageUrl","URLSearchParams","search","getPage","_pageDetails","current","_totalMinutes","getHomeRoute","PrettoSlider","withStyles","thumb","backgroundColor","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","getTimeLeftTxt","totalMillis","totalSecondsLeft","minutesLeft","secondsLeft","getPercentTimeLeft","getRowDetails","totalMillisSpeantLeaning","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","stopTimer","rowDetails","updateOneNoteDB","clearInterval","startTimer","setInterval","studyHistory","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","opacity","getRevisionTime","seconds","minutes","revisionSwitch","FormControl","FormGroup","FormControlLabel","control","Switch","checked","isRevisionMode","studyModeHeader","studyModeSlider","useMemo","minHeight","paddingTop","paddingBottom","valueBuffer","valueLabelDisplay","min","step","max","defaultValue","checkAndStartTimer","time","getTimeElapsedTxt","timerButtons","revisionModeHeader","QuitDialog","revisionTime","checkAndSetRevisionMode","RecentlyRevisedPages","RecentlyEditedPages","getAllPages","pagesLoading","dbLoading","_pages","App","document","exact","Screens","to","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.905fd83d.chunk.js","sourcesContent":["class UtilsService{\n    static _instance: UtilsService;\n\n   replaceParamsInUrl(url: string, params: {[key: string]: any}){\n        Object.entries(params).forEach(([key, value]) => {\n            url = url.replace(`:${key}`, value);\n        });\n\n        return url;\n    }\n\n    containsWord(srcStr: string, searchStr: string){\n        searchStr = searchStr.toLowerCase().trim();\n        srcStr = srcStr.toLowerCase().trim();\n        const words = srcStr.split(' ');\n        return words.filter((word: string) => {\n            return word.startsWith(searchStr);\n        }).length > 0;\n    }\n    \n    static getInstance(){\n        if(!UtilsService._instance){\n            UtilsService._instance = new UtilsService();\n        }\n\n        return UtilsService._instance;\n    }\n}\n\nexport default UtilsService.getInstance();","import utilsService from './utils.service';\nimport {Book, MenuBook, Note, Timer} from '@material-ui/icons';\nimport {serverBase} from './config';\nimport { createHashHistory } from 'history'\nexport const history = createHashHistory()\n\nexport const routeConfig: { [key: string]: any }  = {\n    notebooks: {\n        name: 'Notebooks',\n        path: '/notebooks',\n        isHomePage: true,\n        icon: Book\n    },\n    sections: {\n        name: 'Sections',\n        path: '/notebooks/:id',\n        icon: MenuBook\n    },\n    login: {\n        name: 'Login',\n        path: '/login'\n    },\n    pages: {\n        name: 'Pages',\n        path: '/sections/:id/pages',\n        icon: Note\n    },\n    timer: {\n        name: 'Timer',\n        path: '/timer',\n        icon: Timer\n    },\n    recentlyRevisedPages: {\n        name: 'Recently Revised Pages',\n        path: '/recently-revised-pages'\n    },\n    recentlyCreatedPages: {\n        name: 'Recently Edited Pages',\n        path: '/recently-edited-pages'\n    }\n};\n\nexport const breadCrumbs: {[key: string]: any} = {\n    [routeConfig.sections.name]: [routeConfig.notebooks],\n    [routeConfig.pages.name]: [routeConfig.notebooks, routeConfig.sections]\n};\n\nclass RouteService{\n    static _instance: RouteService;\n\n    getBreadCrumbs(routeName: string){\n        return breadCrumbs[routeName];\n    }\n\n    getHomeRoute(){\n        let homeRoute = Object.entries(routeConfig).find((route: any) => route[1].isHomePage);\n        return homeRoute? homeRoute[1] : null;\n    }\n\n    getRouteInfo(name: string){\n        return routeConfig[name];\n    }\n\n    getRouteUrl(name: string, params: {} = {}){\n        const routeInfo = this.getRouteInfo(name);\n        // return `${serverBase}#${utilsService.replaceParamsInUrl(routeInfo.path, params)}`;\n        return `${serverBase}/#${utilsService.replaceParamsInUrl(routeInfo.path, params)}`;\n    }\n\n    gotoUrl(url: string){\n        history.push(url.replace(`${serverBase}/#`, ''));\n    }\n\n    goTo(name: string, params: {} = {}){\n        const url = this.getRouteUrl(name, params);\n        this.gotoUrl(url);\n    }\n\n    static getInstance(){\n        if(!RouteService._instance){\n            RouteService._instance = new RouteService();\n        }\n\n        return RouteService._instance;\n    }\n}\n\nexport default RouteService.getInstance();\n","import * as Msal from 'msal';\nimport {routeConfig as r} from './route.service';\n\n// export const serverBase = 'http://localhost:3000';\nexport const serverBase = 'https://ajayullal.github.io/one-note-spaced-repetition';\n\nexport const msalConfig: Msal.Configuration = {\n    auth: {\n        clientId: \"7909dc21-ee19-4123-8ff2-9f21085c8447\",\n        authority: \"https://login.microsoftonline.com/common\",\n        // redirectUri: `${serverBase}/auth`\n        redirectUri: `${serverBase}/notebooks`\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\",\n        storeAuthStateInCookie: true\n    }\n};\n\nexport const themeConfig = {\n    drawerWidth: 240\n};\n\nexport const apiConfig = {\n    // serverBase: 'http://localhost:4006'\n    serverBase: 'https://www.onenote.com/api/v1.0/me/notes'\n};\n\nexport const appTexts = {\n    appName: 'Spaced Repetition'\n};\n\nexport const routeConfig = r;\n\nexport default {\n    themeConfig,\n    appTexts,\n    apiConfig,\n    msalConfig,\n    routeConfig\n}\n","import localforage from \"localforage\";\n\nclass ClientSideDataStorage {\n    private storage = localforage.createInstance({\n        name: \"nameHere\"\n    });\n\n    setItemSync(key:string, value: string){\n        if(value){\n            localStorage.setItem(key, value);\n        }else{\n            this.removeItemSync(key);\n        }\n    }\n\n    getItemSync(key:string){\n        return localStorage.getItem(key)\n    }\n\n    removeItemSync(key:string){\n        return localStorage.removeItem(key);\n    }\n\n    setItem(key:any, value: any){\n        this.storage.setItem(key, value);\n    }\n\n    getItem(key: any){\n        return this.storage.getItem(key);\n    }\n\n    removeItem(key: any){\n        return this.storage.removeItem(key);\n    }\n\n    static _instance: ClientSideDataStorage;\n\n    static getInstance() {\n        if (!ClientSideDataStorage._instance) {\n            ClientSideDataStorage._instance = new ClientSideDataStorage();\n        }\n\n        return ClientSideDataStorage._instance;\n    }\n}\n\nexport default ClientSideDataStorage.getInstance();","import clientStorage from './client-side-data-storage.service';\n\nclass UserService {\n    static _userService: UserService;\n    _userDetails: any;\n\n    constructor(){\n        const userDetails = clientStorage.getItemSync('userDetails');\n\n        if(userDetails){\n            this._userDetails = JSON.parse(userDetails);\n        }\n    }\n\n    set userDetails(details: any) {\n        this._userDetails = details;\n    }\n\n    get userDetails() {\n        return this._userDetails;\n    }\n\n    isLoggedIn(): Boolean {\n        return Boolean(clientStorage.getItemSync('token'));\n    }\n\n    logout(){\n        return Boolean(clientStorage.removeItemSync('token'));\n    }\n\n    static getInstance() {\n        if (!UserService._userService) {\n            UserService._userService = new UserService();\n        }\n\n        return UserService._userService;\n    }\n}\n\nexport default UserService.getInstance();","import {userService, routerService} from './';\n\nconst errorMessage = {\n    401: \"Request failed with status code 401\"\n};\n\nclass ErrorHandlerService {\n    static _instance: ErrorHandlerService;\n\n    constructor() {\n\n    }\n\n    logout() {\n        userService.logout();\n        window.location.replace(routerService.getRouteUrl('login')) \n    }\n\n    handleError = (error: any) => {\n        console.error(error);\n\n        switch (error.message) {\n            case errorMessage['401']: \n                        this.logout();\n                        break;\n        }\n\n        return Promise.reject(error.message || error.response.data.message)\n    }\n\n    static getInstance() {\n        if (!ErrorHandlerService._instance) {\n            ErrorHandlerService._instance = new ErrorHandlerService();\n        }\n        return ErrorHandlerService._instance;\n    }\n}\n\nexport default ErrorHandlerService.getInstance();","import { default as _axios } from 'axios';\nimport { msalConfig } from './config';\nimport * as Msal from 'msal';\nimport userService from './user.service';\nimport utilsService from './utils.service';\nimport clientStorage from \"./client-side-data-storage.service\";\nimport errorHandlerService from \"./error-handler.service\";\nimport routerService, {history} from './route.service';\n\nconst axios = _axios.create({\n    baseURL: 'https://graph.microsoft.com/v1.0/me/onenote',\n    headers: {\n\n    }\n});\n\naxios.interceptors.response.use(response => response.data, error => Promise.reject(error));\n\nconst dbPageId = '0-f2f6afa638c1864cb26399b2a7cef5f7!1-E6AC34B29128DCBF!2176';\n\nconst apiEndPoints = {\n    notebooks: '/notebooks',\n    sections: '/notebooks/:id/sections',\n    sectionPages: '/sections/:id/pages?top=100',\n    content: `/pages/${dbPageId}/content`,\n    pages: '/pages?top=100'\n};\n\nclass MicrosoftOneNoteApi {\n    private _redirectUrl: string | null = null;\n    private _db: any;\n    private _dbCellDelimiter = '!@#';\n\n    public get redirectUrl(): string | null {\n        return this._redirectUrl;\n    }\n\n    public set redirectUrl(value: string | null) {\n        this._redirectUrl = value;\n    }\n\n    myMSALObj: any;\n    static microsoftOneNoteApi: any;\n\n    //, \"Notes.ReadWrite.All\", \"Notes.ReadWrite\", \"Notes.Read\", \"Notes.Create\"\n    requestObj = {\n        scopes: [\"Notes.Read.All\", \"offline_access\"]\n    };\n\n    constructor() {\n        this.myMSALObj = new Msal.UserAgentApplication(msalConfig);\n        this.checkAndSetPersistedBearerToken();\n    }\n\n    authRedirectCallBack(error: any, response: any) {\n        if (error) {\n            console.log(error);\n        }\n        else {\n            if (response.tokenType === \"access_token\") {\n                console.log(response.accessToken);\n            } else {\n                console.log(\"token type is:\" + response.tokenType);\n            }\n        }\n    }\n\n    checkTokenExpiryAndRenew(expiresOn: Date){\n        const renewTokenAfterMs = (expiresOn.getTime() - Date.now()) - (1000 * 60 * 10);\n        console.log(\"Setting token renewal timeout...\");\n        setTimeout(() => {\n            console.log(\"Renewing token...\");\n            this.acquireTokenPopup();\n        }, renewTokenAfterMs);\n    }\n\n    onToken(tokenResponse: any){\n        this.setBearerToken(tokenResponse.accessToken);\n        this.setUserDetails(userService.userDetails);\n        history.push(routerService.getRouteUrl('notebooks'));\n    }\n\n    acquireTokenPopup() {\n        //Always start with acquireTokenSilent to obtain a token in the signed in user from cache\n        this.myMSALObj.acquireTokenSilent(this.requestObj).then((tokenResponse: any) => {\n            this.checkTokenExpiryAndRenew(tokenResponse.expiresOn);\n            this.onToken(tokenResponse);\n        }).catch((error: any) => {\n            alert(error);\n            this.myMSALObj.acquireTokenPopup(this.requestObj).then((tokenResponse: any) => {\n                this.checkTokenExpiryAndRenew(tokenResponse.expiresOn);\n                this.onToken(tokenResponse)\n            }).catch((error: any) => {\n                alert(error);\n            });\n        });\n    }\n\n    setUserDetails(userDetails: any) {\n        clientStorage.setItemSync('userDetails', JSON.stringify(userDetails));\n    }\n\n    onSignIn() {\n        this.myMSALObj.handleRedirectCallback(this.authRedirectCallBack);\n        \n        return this.myMSALObj.loginPopup(this.requestObj).then((loginResponse: any) => {\n            this.acquireTokenPopup();\n        }).catch((error: any) => {\n            alert(error);\n        });\n    }\n\n    checkAndSetPersistedBearerToken() {\n        const token = clientStorage.getItemSync('token');\n\n        if (token) {\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        }\n    }\n\n    setBearerToken(token: string) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        clientStorage.setItemSync('token', token);\n    }\n\n    private returnValue(resp: any) {\n        return resp.value\n    }\n\n    getAllNoteBooks() {\n        return axios.get(apiEndPoints.notebooks).then(this.returnValue).catch(errorHandlerService.handleError);\n    }\n\n    getAllSection(notebookId: string) {\n        return axios.get(utilsService.replaceParamsInUrl(apiEndPoints.sections, { id: notebookId })).then(this.returnValue).catch(errorHandlerService.handleError);\n    }\n\n    getAllPages(){\n        return axios.get(apiEndPoints.pages).then((response: any) => {\n            return response.value.filter((page: any) => page.id !== dbPageId && page.parentSection.displayName !== \"Work\");\n        }).catch(errorHandlerService.handleError);\n    }\n\n    getSectionPages(sectionId: string) {\n        return axios.get(utilsService.replaceParamsInUrl(apiEndPoints.sectionPages, { id: sectionId })).then(response => {\n            const _response = this.returnValue(response);\n            return _response.filter((page: any) => page.title);\n        }).catch(errorHandlerService.handleError);\n    }\n\n    getPage(selfUrl: string) {\n        return axios.get(selfUrl).catch(errorHandlerService.handleError);\n    }\n\n    updateOneNoteDB(sessionDetails: any) {\n        const rowProperties = ['startDate', \n                               'startTime', \n                               'title', \n                               'minutesSpentLearning', \n                               'totalSessionMinutes', \n                               'repetition',\n                               'pageId',\n                               'sectionName',\n                               'sectionId'];\n\n        let content = '';\n\n        rowProperties.forEach((rowProp, index) => {\n            content += `${sessionDetails[rowProp]}${index !== (rowProperties.length - 1)? this._dbCellDelimiter: ''}`\n        });\n\n        return axios.patch(apiEndPoints.content,\n            [\n                {\n                    'target':'body',\n                    'action':'append',\n                    'content': `<p>${content}</p>`\n                  }\n             ]\n        ).then(data => this._db = null).catch(errorHandlerService.handleError);\n    }\n\n    getAllDBRows(){\n        return new Promise((resolve, reject) => {\n            this.getDb().then((db: string) => {\n                var doc = new DOMParser().parseFromString(db, \"text/xml\");\n                const ps = Array.from(doc.getElementsByTagName('p'));\n                const _rows: any[] = [];\n                ps.forEach(p => {\n                  const content = p?.textContent?.split(this._dbCellDelimiter) || [];\n                  _rows.push({\n                    startDate: content ? content[0] : '',\n                    startTime: content ? content[1] : '',\n                    title: content ? content[2].trim() : '',\n                    minutesSpentLearning: content ? Number(content[3]) : '',\n                    totalSessionMinutes: content ? content[4] : '',\n                    repetition: content ? (content[5].trim() === 'false'? 'No': 'Yes') : '',\n                    pageId: content ? content[6] : '',\n                    sectionName: content ? content[7] : '',\n                    sectionId: content ? content[8] : ''\n                  });\n                });\n                resolve(_rows);\n              }).catch(reject);\n        });\n    }\n\n    getDb(){\n        if(this._db){\n            return Promise.resolve(this._db);\n        }else{\n            return axios.get(apiEndPoints.content).then(db => {\n                return this._db = db;\n             }).catch(errorHandlerService.handleError);\n        }\n    }\n\n    getPageContent(contentUrl: string) {\n        return axios.get(contentUrl).catch(errorHandlerService.handleError);\n    }\n\n    static getInstance() {\n        if (!MicrosoftOneNoteApi.microsoftOneNoteApi) {\n            MicrosoftOneNoteApi.microsoftOneNoteApi = new MicrosoftOneNoteApi();\n        }\n\n        return MicrosoftOneNoteApi.microsoftOneNoteApi;\n    }\n}\n\nexport default MicrosoftOneNoteApi.getInstance();","import _clientStorage from './client-side-data-storage.service';\nimport _mons from './microsoft-one-note.service';\nimport _routerService from './route.service';\nimport _userService from './user.service';\nimport _errorHandlerService from './error-handler.service';\nimport _utilsService from './utils.service';\n\nexport const clientStorage = _clientStorage;\nexport const mons = _mons;\nexport const routerService = _routerService;\nexport const userService = _userService;\nexport const errorHandlerService = _errorHandlerService;\nexport const utilsService = _utilsService;","import React from 'react';\nimport './header.scss';\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, createStyles, Theme } from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport IHeader from \"./IHeader\";\nimport { themeConfig } from '../../services/config';\nimport { userService, routerService } from '../../services';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = (hideNavDrawer: IHeader['hideNavDrawer']) => {\n    return makeStyles((theme: Theme) =>\n        createStyles({\n            appBar: {\n                [theme.breakpoints.up('sm')]: {\n                    width: hideNavDrawer ? '100%' : `calc(100% - ${themeConfig.drawerWidth}px)`,\n                    marginLeft: themeConfig.drawerWidth\n                },\n            },\n            menuButton: {\n                marginRight: theme.spacing(2),\n                [theme.breakpoints.up('sm')]: {\n                    display: 'none'\n                }\n            },\n            homeButton: {\n                marginLeft: '10px',\n                marginRight: '5px'\n            },\n            toolbar: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: '0px',\n                paddingRight: '15px'\n            }\n        })\n    );\n}\n\nexport default ({ pageName, hideNavDrawer = false, history, toggleNavDrawer }: IHeader) => {\n    const classes = useStyles(hideNavDrawer)();\n    const loginRouteInfo = routerService.getRouteInfo('login');\n    const isLoginPage = pageName === loginRouteInfo.name;\n\n    const logout = () => {\n        userService.logout();\n        history.push(routerService.getRouteUrl('login'));\n    };\n\n    const userDetails = (<div className=\"account-details\">\n        <span className=\"user-name\">{userService.userDetails?.account.name}</span>\n        <AccountCircle />\n        <span onClick={logout} className=\"logout\">Logout</span>\n    </div>);\n\n    const menuIcon = (\n        <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            className={classes.homeButton}\n            onClick={toggleNavDrawer}>\n            <MenuIcon />\n        </IconButton>\n    );\n\n    return (\n        <>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    <Typography variant=\"h6\" noWrap>\n                        <>\n                            {\n                                !isLoginPage ? menuIcon: ''\n                            }\n\n                            <span style={{ marginLeft: isLoginPage? '23px': '', position: 'relative', top: '2px' }}>{pageName}</span>\n                        </>\n                    </Typography>\n\n                    {userService.isLoggedIn() ? userDetails : null}\n                </Toolbar>\n            </AppBar>\n        </>\n    );\n};\n","import React, {useEffect} from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport default ({errorMessage}: any) => {\n    useEffect(() => {}, [errorMessage]);\n\n    function Alert(props: any) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    const handleClose = (event: any, reason: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        errorMessage = ''\n    };\n\nreturn (\n        <>     \n            {errorMessage? (\n                <div style={{\n                    marginTop: '70px',\n                    width: '110%',\n                    marginLeft: '50px'\n                }}>\n                    <Alert severity=\"error\">\n                        {errorMessage}\n                    </Alert>\n                </div>\n            ): null}\n        </>);\n};","import React from 'react';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Hidden, Typography } from '@material-ui/core';\nimport { createStyles, Theme, makeStyles, useTheme } from '@material-ui/core/styles';\nimport { themeConfig, appTexts } from '../../services/config';\nimport INavDrawer from './INavDrawer';\nimport logo from '../../logo.svg';\nimport './nav-drawer.scss';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                flexShrink: 0,\n            }\n        },\n        drawerPaper: {\n            width: themeConfig.drawerWidth,\n        },\n        toolbar: theme.mixins.toolbar\n    })\n);\n\nexport default ({ open, onClose, children }: INavDrawer) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    // const noteBookList: any = (<List>\n    //     {noteBooks.map((text, index) => (\n    //         <ListItem button key={text}>\n    //             <ListItemIcon><BookIcon /></ListItemIcon>\n    //             <ListItemText primary={text} />\n    //         </ListItem>\n    //     ))}\n    // </List>);\n\n    const drawer = (\n        <div>\n            <div className=\"logo-container\">\n                <img src={logo} width=\"40\" height=\"40\" />\n                <Typography className=\"app-name\" variant=\"h6\">\n                    {/* {appTexts.appName} */}\n                    <ArrowBackIosIcon onClick={onClose} className=\"closeIcon\"></ArrowBackIosIcon>\n                </Typography>\n            </div>\n\n            <Divider />\n\n            {children}\n        </div >\n    );\n\n    return (\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n                <Drawer\n                    variant=\"temporary\"\n                    anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    onClose={onClose}>\n                    {drawer}\n                </Drawer>\n            </Hidden>\n\n            <Hidden xsDown implementation=\"css\">\n                <Drawer\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    variant=\"temporary\"\n                    open={open}>\n                    {drawer}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n};","import NavDrawer from './nav-drawer';\n\nexport default NavDrawer;","import React, { useEffect, useRef, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles, Theme, createStyles, Typography, Link, IconButton } from '@material-ui/core';\nimport Header from '../header/Header';\nimport ILayout from './ILayout';\nimport routeService from '../.../../../services/route.service';\nimport { withRouter } from 'react-router-dom';\nimport ErrorAlert from '../error-alert/ErrorAlert';\nimport NavDrawer from '../nav-drawer';\n\nimport BookIcon from '@material-ui/icons/Book';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport Pages from '@material-ui/icons/Pages';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex'\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    link: {\n      display: 'flex',\n    },\n    icon: {\n      marginRight: theme.spacing(0.5),\n      width: 20,\n      height: 20,\n    },\n    breadcrumb: {\n      marginBottom: 20\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n  })\n);\n\nexport default withRouter(function Layout({ errorMessage, routeInfo, children, hideNavDrawer = false, history }: any) {\n  const classes = useStyles();\n  const [navOpen, setNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <ErrorAlert errorMessage={errorMessage} />\n\n      <Header toggleNavDrawer={() => { setNavOpen(navOpen => !navOpen) }} history={history} hideNavDrawer={hideNavDrawer} pageName={routeInfo.name} />\n\n      <NavDrawer open={navOpen} onClose={() => setNavOpen(false)}>\n        <List>\n          <ListItem onClick={() => {\n            const notebooks = routeService.getRouteInfo('notebooks');\n            routeService.gotoUrl(`${notebooks.path}`);\n          }} button>\n            <ListItemIcon><BookIcon /></ListItemIcon>\n            <ListItemText primary={routeService.getRouteInfo('notebooks').name} />\n          </ListItem>\n          \n          <ListItem onClick={() => {\n             const recentlyRevisedPages = routeService.getRouteInfo('recentlyRevisedPages');\n             routeService.gotoUrl(`${recentlyRevisedPages.path}`);\n          }} button>\n            <ListItemIcon><WatchLaterIcon /></ListItemIcon>\n            <ListItemText primary={routeService.getRouteInfo('recentlyRevisedPages').name} />\n          </ListItem>\n\n          <ListItem onClick={() => {\n             const recentlyCreatedPages = routeService.getRouteInfo('recentlyCreatedPages');\n             routeService.gotoUrl(`${recentlyCreatedPages.path}`);\n          }} button>\n            <ListItemIcon><Pages /></ListItemIcon>\n            <ListItemText primary={routeService.getRouteInfo('recentlyCreatedPages').name} />\n          </ListItem>\n        </List>\n      </NavDrawer>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n});\n","import useAuth from \"../hooks/useAuth\";\nimport React from \"react\";\nimport mons from '../services/microsoft-one-note.service';\n\nexport default (Component: any) => (props: any) => {\n    const [isAuthenticated] = useAuth(props.history);\n    \n    if(!isAuthenticated){\n        mons.redirectUrl = props.match.url;\n        return null;\n    }else{\n        mons.redirectUrl = null;\n        return <Component {...props} />\n    }\n}","import authService from '../services/user.service';\nimport {routeConfig} from '../services/route.service';\nimport clientStorageService from '../services/client-side-data-storage.service';\nimport userService from '../services/user.service';\n\nexport default (history: any) => {\n    if(!userService.isLoggedIn()){\n        history.push(routeConfig.login.path);\n        return [false];\n    }\n\n    return [true];\n};","import React from 'react';\nimport { Grid, Card, CardContent, Typography, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n    card: {\n        cursor: 'pointer'\n    }\n});\n\n\nexport default ({items, onClick, displayPropName, render = null, keyProp}: any) => {\n    const classes = useStyles();\n\n    if(!render){\n        render = (item: any) => {\n            return (\n                <Typography color=\"textSecondary\" gutterBottom>\n                    {item[displayPropName]}\n                </Typography>\n            );\n        }\n    }\n    \n    return (\n        items?.length > 0?\n        (<Grid spacing={5} container>\n            {\n                items.map((item: any) => {\n                    return (\n                        <Grid onClick={() => onClick(item)} xs={12} item md={6} key={item[keyProp]? item[keyProp]: item.id}>\n                            <Card className={classes.card} variant=\"outlined\">\n                                <CardContent>\n                                    {\n                                          render(item)   \n                                    }\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    );\n                })\n            }\n        </Grid>):\n        <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\" gutterBottom>Nothing to display</Typography>\n    );\n}","import React from 'react';\nimport Layout from '../../components/layout/layout';\nimport { LinearProgress } from '@material-ui/core';\nimport useBooks from './useBooks';\nimport withAuth from '../../HOCs/withAuth';\nimport routerService from '../../services/route.service';\nimport CardList from '../../components/card-list/CardList';\n\nexport default withAuth((props: any) => {\n    const [noteBooks, errorMessage] = useBooks();\n\n    const viewSections = (noteBook: any) => {\n        routerService.goTo('sections', { id: noteBook.id });\n    };\n\n    const noteBooksGrid = (<CardList displayPropName='displayName' onClick={viewSections} items={noteBooks || []}></CardList>);\n\n    return (\n        <Layout \n            errorMessage={errorMessage} \n            hideNavDrawer={true} \n            routeInfo={routerService.getRouteInfo('notebooks')}>\n            {\n                !noteBooks ? (<LinearProgress color=\"secondary\" />) : noteBooksGrid\n            }\n        </Layout>\n    );\n});","import {useEffect, useState} from 'react';\nimport microsoftOneNoteService from '../../services/microsoft-one-note.service';\n\nexport default () => {\n    let [noteBooks, setNoteBooks] = useState(null);\n    let [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n        microsoftOneNoteService.getAllNoteBooks().then((allBooks: any) => {\n            setNoteBooks(allBooks);\n        }).catch((error: any) => {\n            setErrorMessage(error);\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return [noteBooks, errorMessage];\n};\n","import React, {useEffect, useState} from 'react';\nimport Layout from '../../components/layout/layout';\nimport { LinearProgress, TextField } from '@material-ui/core';\nimport withAuth from '../../HOCs/withAuth';\nimport useSections from './useSections';\nimport CardList from '../../components/card-list/CardList';\nimport {routerService, utilsService} from '../../services';\n\nexport default withAuth((props: any) => {\n    const [sections] = useSections(props.match.params.id);\n    const [filteredSections, setFilteredSections] = useState([]);\n\n    useEffect(() => {\n        setFilteredSections(sections);\n    }, [sections]);\n\n    function viewPages(section: any){\n        routerService.goTo('pages', {id: section.id});\n    }\n\n    const sectionsGrid = (\n        <>\n                  <TextField\n                        fullWidth\n                        autoComplete=\"off\"\n                        className=\"searchBox\"\n                        id=\"outlined-secondary\"\n                        label=\"Search Sections\"\n                        variant=\"outlined\"\n                        onChange={(event: any) => {\n                            const searchTxt = event.target.value.toLowerCase();\n                            \n                            const _filteredSections = sections.filter((section: any) => {\n                                const sectionName = section.displayName.toLowerCase();\n                                return utilsService.containsWord(sectionName, searchTxt);\n                            });\n\n                            setFilteredSections(_filteredSections);\n                        }}\n                    />\n                    \n                    <CardList displayPropName='displayName' onClick={viewPages} items={filteredSections || []}></CardList>\n        </>\n    );\n\n    return (\n        <Layout hideNavDrawer={true} routeInfo={routerService.getRouteInfo('sections')}>\n            <>\n                {\n                    sections?.length > 0 ? sectionsGrid:  (<LinearProgress color=\"secondary\" />)\n                }\n            </>\n        </Layout>\n    );\n});","import mons from '../../services/microsoft-one-note.service';\nimport {useState, useEffect} from 'react';\n\nexport default (notebookId: string)=> {\n    let [sections, useSections] = useState([]);\n\n    useEffect(() => {\n        mons.getAllSection(notebookId).then((sections: any) => {\n            useSections(sections);\n        });\n    }, [notebookId]);\n\n    return [sections];\n};","import {useEffect, useState} from 'react';\nimport mons from '../services/microsoft-one-note.service';\n\nexport default () => {\n    const [db, setDb] = useState();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        mons.getAllDBRows().then((db: any) => {\n            setDb(db);\n        }).finally(()=> {\n            setLoading(false);\n        });\n    }, [setLoading]);\n\n    return [db, loading, setDb];\n};","class DateService{\n    static _instance: DateService;\n\n    diffBetweenDates(date1: string, date2: string){\n        const _date1: any = new Date(date1);\n        const _date2: any = new Date(date2);\n        const diffTime = Math.abs(_date2 - _date1);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \n        return diffDays;\n    }\n\n    diffFromToday(date: string){\n        const _date1: any = new Date(date);\n        const _date2: any = new Date();\n        const diffTime = Math.abs(_date2 - _date1);\n        const diffDays = Math.trunc(diffTime / (1000 * 60 * 60 * 24)); \n        return diffDays;\n    }\n\n    static getInstance(){\n        if(!DateService._instance){\n            DateService._instance = new DateService();\n        }\n\n        return DateService._instance;\n    }\n}\n\nexport default DateService.getInstance();","import dateService from './date.service';\nimport { Typography } from '@material-ui/core';\n\nclass Pages {\n    static _instance: Pages;\n\n    constructor() {\n\n    }\n\n    sortPages(pages: any){\n        pages.sort((page1: any, page2: any) => {\n            if(page1.sessions.length === 0 && page2.sessions.length > 0){\n                return 1;\n            }else if(page1.sessions.length > 0 && page2.sessions.length === 0){\n                return -1;\n            }else if(page1.sessions.length === 0 && page2.sessions.length === 0){\n                return 0;\n            }else{\n                const _date1: any = new Date(page1.sessions[0].startDate);\n                const _date2: any = new Date(page2.sessions[0].startDate);\n                return _date2 - _date1\n            }\n        });\n    }\n\n    getSessionsFromDB(db: any){\n        const pageTitleToSessions: any = {};\n\n        db.forEach((row: any) => {\n            if (!pageTitleToSessions[row.title]) {\n                pageTitleToSessions[row.title] = [];\n            }\n\n            pageTitleToSessions[row.title].push(row);\n        });\n\n        return pageTitleToSessions;\n    }\n\n    addSessionDiffFromToday(sessions: any){\n        return sessions.map((session: any) => {\n            session.daysDiffFromToday = dateService.diffFromToday(session.startDate);\n            return session;\n        });\n    }\n\n    mergeDBAndPageData(db: any, pages: any) {\n        const pageTitleToSessions: any = {};\n\n        db.forEach((row: any) => {\n            if (!pageTitleToSessions[row.title]) {\n                pageTitleToSessions[row.title] = [];\n            }\n\n            pageTitleToSessions[row.title].push(row);\n        });\n        \n        pages.forEach((page: any) => {\n            page.sessions = pageTitleToSessions[page.title] || [];\n            // Page details\n            this.addSessionDiffFromToday(page.sessions);\n        });\n\n        this.sortPages(pages);\n    }\n\n    static getInstance() {\n        if (!Pages._instance) {\n            Pages._instance = new Pages();\n        }\n\n        return Pages._instance;\n    }\n}\n\nexport default Pages.getInstance();","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport CardList from \"../card-list/CardList\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { routerService } from \"../../services\";\n\nexport default ({ viewPageInfo, filteredPages, keyProp }: any) => {\n    return (\n        <>\n            <CardList\n                onClick={viewPageInfo}\n                items={filteredPages}\n                keyProp={keyProp}\n                render={(item: any) => {\n                    return (\n                        <div key={item}>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                {item.title}\n                            </Typography>\n\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                <span>{item.sectionName}</span>\n                            </Typography>\n\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                Last revisited:\n\n                                {item.sessions?.length > 0 ? item.sessions.map(({ daysDiffFromToday, startDate, startTime }: any, index: number) => {\n                                    return (<span key={`${startDate}*${startTime}`}> {daysDiffFromToday}{index !== item.sessions.length - 1 ? ', ' : ` day${daysDiffFromToday > 1 ? 's' : ''} ago`}</span>)\n                                }) : ' Never'}\n\n                                {\n                                    item.links ? <VisibilityIcon onClick={\n                                        (event) => {\n                                            event.stopPropagation();\n                                            const link = item.links?.oneNoteClientUrl?.href;\n                                            if(link){\n                                                window.location.href = link;\n                                            }\n                                        }\n                                    } style={{\n                                        float: 'right'\n                                    }}></VisibilityIcon> : null\n                                }\n                            </Typography>\n                        </div>\n                    );\n                }}>\n            </CardList>\n        </>\n    );\n};","import withAuth from \"../../HOCs/withAuth\";\nimport usePages from \"./usePages\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Layout from \"../../components/layout/layout\";\nimport { LinearProgress, TextField, Typography } from \"@material-ui/core\";\nimport routerService from '../../services/route.service';\nimport useDb from '../../hooks/useDB';\nimport pagesService from '../../services/pages.service';\nimport PageList from '../../components/pagesList/pagesList';\nimport utilsService from \"../../services/utils.service\";\n\nexport default withAuth((props: any) => {\n    const [pages, loading]: any[] = usePages(props.match.params.id);\n    const [filteredPages, setFilteredPages] = useState(pages);\n    const timerUrl = routerService.getRouteUrl('timer');\n    const [db, dblLoading] = useDb();\n    const [sectionName, setSectionName] = useState();\n\n    const mergeDBAndPageData = useCallback(() => {\n        if (pages?.length > 0) {\n            setSectionName(pages[0].parentSection.displayName);\n        }\n        pagesService.mergeDBAndPageData(db, pages);\n        setFilteredPages(pages);\n    }, [db, pages]);\n\n    useEffect(() => {\n        if (db && pages) {\n            mergeDBAndPageData()\n        }\n    }, [db, mergeDBAndPageData, pages]);\n\n    function viewPageInfo(page: any) {\n        routerService.gotoUrl(`${timerUrl}?pageUrl=${encodeURIComponent(page.self)}`);\n    }\n\n    const sectionsGrid = (\n        <>\n            <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>\n                {sectionName}\n            </Typography>\n\n            <TextField\n                fullWidth\n                autoComplete=\"off\"\n                className=\"searchBox\"\n                id=\"outlined-secondary\"\n                label=\"Search Pages\"\n                variant=\"outlined\"\n                onChange={(event: any) => {\n                    const searchTxt = event.target.value.toLowerCase();\n\n                    const _filteredPages = pages.filter((page: any) => {\n                        return utilsService.containsWord(page.title, searchTxt);\n                    });\n\n                    setFilteredPages(_filteredPages);\n                }}\n            />\n\n            <PageList viewPageInfo={viewPageInfo} filteredPages={filteredPages}></PageList>\n        </>\n    );\n\n    return (\n        <Layout hideNavDrawer={true} routeInfo={routerService.getRouteInfo('pages')}>\n            <>\n                {\n                    (loading || dblLoading) ? (<LinearProgress color=\"secondary\" />) : sectionsGrid\n                }\n            </>\n        </Layout>\n    );\n});","import {useState, useEffect} from 'react';\nimport mons from '../../services/microsoft-one-note.service';\n\nexport default (sectionId: string) => {\n    let [pages, setPages] = useState();\n    let [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        mons.getSectionPages(sectionId).then((pages: any) => {\n            setPages(pages);\n        }).finally(() => {\n            setLoading(false);\n        });\n    }, [sectionId]);\n\n    return [pages, loading];\n};","import React from \"react\";\nimport { Dialog, DialogTitle, DialogActions, Button } from \"@material-ui/core\";\n\nexport default ({open, onClose, onQuit, isRevision}: any) => {    \n    return (\n        <div>\n            <Dialog\n                open={open}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">{`Are you sure you want to ${isRevision? 'stop': 'quit'}?`}</DialogTitle>\n\n                <DialogActions>\n                    <Button onClick={onClose} color=\"primary\">Close</Button>\n                    <Button onClick={onQuit} color=\"primary\" autoFocus>{isRevision? 'Stop': 'Quit'}</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};","import React, { useState, useMemo, useCallback, useRef, useEffect } from 'react';\nimport Layout from '../../components/layout/layout';\nimport routerService from '../../services/route.service';\nimport { withStyles, Slider, Typography, Button, LinearProgress, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\nimport mons from '../../services/microsoft-one-note.service';\nimport QuitDialog from './QuitDialog';\nimport Paper from '@material-ui/core/Paper';\nimport './_timer.scss';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n});\n\nexport default (props: any) => {\n  let [sliderValue, setSliderValue] = useState(30);\n  let [isTicking, setTicking] = useState(false);\n  let [timeLeft, setTimeLeft] = useState();\n  let [timeLeftPercent, setTimeLeftPercent] = useState(0);\n  let [openQuitDialog, setQuitDialog] = useState(false);\n  let [rows, setRows]: [any[], any] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [totalMinutes, setTotalMinutes] = useState();\n  const [revisionMode, setRevisionMode] = useState(false);\n  const [timeElapsedTxt, setTimeElapsedTxt] = useState(''); \n\n  const startMillis = useRef(new Date());\n  const sliderValueRef = useRef(30);\n  const counterIntervalRef: any = useRef();\n  const pageDetails: any = useRef();\n  const revisionClicked = useRef(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const params = new URLSearchParams(props.location.search);\n    const pageUrl = params.get('pageUrl');\n\n    if (pageUrl) {\n      mons.getPage(pageUrl).then((_pageDetails: any) => {\n        pageDetails.current = _pageDetails;\n\n        return mons.getAllDBRows().then((rows: any[]) => {\n          let _totalMinutes = 0;\n          const _rows: any = [];\n\n          rows.forEach(row => {\n            if (pageDetails?.current.title === row.title) {\n              _totalMinutes += row.minutesSpentLearning;\n              _rows.push(row);\n            }\n          });\n\n          setTotalMinutes(_totalMinutes);\n          setRows(_rows);\n        });\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      routerService.goTo(routerService.getHomeRoute()['name'].toLowerCase());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const PrettoSlider = withStyles({\n    root: {\n      color: 'rgb(246, 1, 87)',\n      height: 8,\n    },\n    thumb: {\n      height: 24,\n      width: 24,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -8,\n      marginLeft: -12,\n      '&:focus,&:hover,&$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 8,\n      borderRadius: 4,\n    },\n    rail: {\n      height: 8,\n      borderRadius: 4,\n    },\n  })(Slider);\n\n  const getTimeLeftTxt = (totalMillis: number) => {\n    const millisElapsedSinceStart = Date.now() - startMillis.current.getTime();;\n    const millisLeft = totalMillis - millisElapsedSinceStart;\n    let totalSecondsLeft = millisLeft / (1000);\n    let minutesLeft = Math.trunc(totalSecondsLeft / 60);\n    let secondsLeft = Math.ceil(totalSecondsLeft - (minutesLeft * 60));\n    return `${minutesLeft} minutes and ${secondsLeft} seconds left`;\n  };\n\n  const getPercentTimeLeft = (totalMillis: number) => {\n    const millisElapsedSinceStart = Date.now() - startMillis.current.getTime();\n    const millisLeft = totalMillis - millisElapsedSinceStart;\n    return (millisLeft / totalMillis) * 100;\n  };\n\n  const getRowDetails = (totalMillisSpeantLeaning: number, totalMillis: number) => {\n    const startDate = `${startMillis.current.getMonth() + 1}/${startMillis.current.getDate()}/${startMillis.current.getFullYear()}`;\n    const startTime = `${startMillis.current.getHours()}:${startMillis.current.getMinutes()}:${startMillis.current.getSeconds()}`;\n\n    return {\n      startDate,\n      startTime,\n      title: pageDetails.current.title,\n      totalSessionMinutes: totalMillis / (60000),\n      minutesSpentLearning: totalMillisSpeantLeaning / (60000),\n      repetition: false,\n      pageId: pageDetails.current.id,\n      sectionName: pageDetails.current.parentSection.displayName,\n      sectionId: pageDetails.current.parentSection.id\n    };\n  };\n\n  const stopTimer = useCallback(() => {\n    const totalMillis = sliderValueRef.current * 60 * 1000;\n    const totalMillisSpeantLeaning = (Date.now() - startMillis.current.getTime());\n    const rowDetails = getRowDetails(totalMillisSpeantLeaning, totalMillis);\n\n    // Update one note page which tracks learning\n    mons.updateOneNoteDB(rowDetails).then(() => {\n      setRows((rows: any) => [...rows, {...rowDetails, repetition: 'No'}]);\n    });\n\n    clearInterval(counterIntervalRef.current);\n    setTicking(false);\n    // Store time spent studying \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const startTimer = useCallback(() => {\n    // Start timer \n    const totalMillis = sliderValueRef.current * 60 * 1000;\n    startMillis.current = new Date();\n\n    setTimeLeft(getTimeLeftTxt(totalMillis));\n    setTimeLeftPercent(getPercentTimeLeft(totalMillis));\n\n    counterIntervalRef.current = setInterval(() => {\n      setTimeLeft(getTimeLeftTxt(totalMillis));\n      setTimeLeftPercent(getPercentTimeLeft(totalMillis));\n\n      const millisElapsedSinceStart = Date.now() - startMillis.current.getTime();\n\n      if (millisElapsedSinceStart >= totalMillis) {\n        stopTimer();\n      }\n    }, 1000);\n\n    setTicking(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const studyHistory = (\n    rows.length > 0 ?\n      (\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\">Date</TableCell>\n                <TableCell align=\"center\">Time</TableCell>\n                <TableCell align=\"center\">Minutes spent</TableCell>\n                <TableCell align=\"center\">Total session minutes</TableCell>\n                <TableCell align=\"center\">Repetition</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row, index) => (\n                <TableRow style={row.minutesSpentLearning < row.totalSessionMinutes ? { backgroundColor: '#faa1be', opacity: 0.8 } : { position: 'static' }} key={index}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{row.startDate}</TableCell>\n                  <TableCell align=\"center\">{row.startTime}</TableCell>\n                  <TableCell align=\"center\">{row.minutesSpentLearning}</TableCell>\n                  <TableCell align=\"center\">{row.totalSessionMinutes}</TableCell>\n                  <TableCell align=\"center\">{row.repetition}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\" gutterBottom>Nothing to display</Typography>\n  );\n\n  const toggleRevisionMode = (name: any) => (event: any) => {\n    if (isTicking) {\n      revisionClicked.current = true;\n      setQuitDialog(true)\n    } else {\n      setRevisionMode(isRevisionMode => !isRevisionMode);\n    }\n  };\n\n  const getRevisionTime = () => {\n    const seconds = Math.trunc((Date.now() - startMillis.current.getTime())/1000);\n    const minutes = Math.trunc(seconds / 60);\n    return {\n      minutes,\n      seconds\n    };\n  };\n\n  const getTimeElapsedTxt = () => {\n    const time = getRevisionTime();\n    return `Time Elapsed - ${time.minutes > 0? time.minutes+\" minutes and \": ''}${time.seconds % 60} seconds`;\n  };\n\n  const checkAndSetRevisionMode = () => {\n    if (!revisionMode) {\n      // Revision started\n      revisionClicked.current = false;\n      setRevisionMode(true);\n\n      if(isTicking){\n        stopTimer();\n      }\n    }else{\n      // Revision Ended\n      clearInterval(counterIntervalRef.current);\n      const revisionTime = getRevisionTime();\n      const totalMillisSpeantLeaning = ((revisionTime.minutes * 60) + revisionTime.seconds) * 1000;\n      const rowDetails = getRowDetails(totalMillisSpeantLeaning, totalMillisSpeantLeaning);\n      rowDetails.repetition = true;\n        \n      // Update one note page which tracks learning\n      mons.updateOneNoteDB(rowDetails).then(() => {\n        setRows((rows: any) => [...rows, {...rowDetails, repetition: 'Yes'}]);\n      });\n    }\n  };\n\n  const revisionSwitch = (\n    <>\n      <FormControl className=\"revision-switch\" component=\"fieldset\">\n        <FormGroup>\n          <FormControlLabel\n            control={<Switch checked={revisionMode} onChange={toggleRevisionMode('revisionMode')} value=\"gilad\" />}\n            label=\"Revision Mode\" />\n        </FormGroup>\n      </FormControl>\n      <br />\n    </>\n  );\n\n  const studyModeHeader = (\n    !isTicking ?\n      <Typography variant=\"h5\" component=\"h6\" gutterBottom>Study {pageDetails.current && `\"${pageDetails.current.title}\"`} for {sliderValue} Minutes</Typography> :\n      <Typography variant=\"h5\" component=\"h6\" gutterBottom>{pageDetails.current && `\"${pageDetails.current.title}\"`}: {timeLeft}</Typography>\n  );\n\n  const studyModeSlider = useMemo(() => (\n    <>\n      <div style={{\n        minHeight: '45px',\n        paddingTop: isTicking ? '15px' : '0px',\n        paddingBottom: isTicking ? '15px' : '0px'\n      }}>\n        {\n          !isTicking ? <PrettoSlider\n            onChange={(event, value) => {\n              sliderValueRef.current = Number(value);\n              setSliderValue(sliderValueRef.current);\n            }}\n            valueLabelDisplay=\"auto\"\n            aria-label=\"pretto slider\"\n            min={1}\n            step={1}\n            max={90}\n            defaultValue={sliderValueRef.current} /> :\n            <LinearProgress\n              variant=\"buffer\"\n              value={100 - timeLeftPercent}\n              valueBuffer={0}\n              color=\"secondary\"\n            />\n        }\n      </div>\n    </>\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  ), [isTicking, rows, timeLeftPercent]);\n\n  const checkAndStartTimer = () => {\n    if(revisionMode){\n      startMillis.current = new Date();\n  \n      counterIntervalRef.current = setInterval(() => {\n        setTimeElapsedTxt(getTimeElapsedTxt());\n      }, 1000);\n    }else{\n      startTimer();\n    }\n    setTicking(true);\n  };\n\n  const timerButtons = (\n    !isTicking ?\n      (<Button onClick={() => {checkAndStartTimer()}} variant=\"contained\" color=\"primary\">Start</Button>) :\n      (<Button onClick={() => {\n        setQuitDialog(true)\n      }} variant=\"contained\" color=\"primary\">{revisionMode? 'Stop': 'Quit'}</Button>)\n  );\n\n  const revisionModeHeader = (\n    <>{isTicking? <Typography className=\"revision-mode-header\" variant=\"h5\" component=\"h6\" gutterBottom>{timeElapsedTxt}</Typography>: null}</>\n  );\n\n  const onQuit = () => {\n    if (revisionClicked.current || revisionMode) {\n      checkAndSetRevisionMode();\n    }else{\n      stopTimer();\n    }\n    setQuitDialog(false);\n    setTicking(false);\n  };\n  \n  return (\n    <>\n      <Layout hideNavDrawer={true} routeInfo={routerService.getRouteInfo('timer')}>\n        {/*Quit Dialog*/}\n        <QuitDialog open={openQuitDialog} onClose={() => {\n          revisionClicked.current = false;\n          setQuitDialog(false)\n        }} onQuit={onQuit} isRevision={revisionMode}></QuitDialog>\n\n        {revisionSwitch}\n        {revisionMode ? null : studyModeHeader}\n        {revisionMode ? null : studyModeSlider}\n        {timerButtons}{revisionMode? revisionModeHeader: null}\n\n        <div className=\"table-cntr\">\n          <Typography variant=\"h5\" component=\"h6\" gutterBottom>\n            Learning history{totalMinutes ? `: ${Math.ceil(totalMinutes)} minutes spent learning` : null}\n          </Typography>\n          {\n            loading ? <LinearProgress color=\"secondary\" /> : studyHistory\n          }\n        </div>\n      </Layout>\n    </>\n  );\n}; ","import React, { useEffect, useState } from 'react';\nimport withAuth from '../../HOCs/withAuth';\nimport './_pages.module.scss';\nimport Layout from '../../components/layout/layout';\nimport routerService from '../../services/route.service';\nimport useDb from '../../hooks/useDB';\nimport { LinearProgress, TextField } from '@material-ui/core';\nimport pagesService from '../../services/pages.service';\nimport PageList from '../../components/pagesList/pagesList';\nimport utilsService from '../../services/utils.service';\n\nexport default withAuth((props: any) => {\n    const [db, loading, setDb] = useDb();\n    const [filteredPages, setFilteredPages]: [any, any] = useState([]);\n\n    useEffect(() => {\n        if (db && db.length > 0 && !db[0].sessions) {\n            const pageSessions = pagesService.getSessionsFromDB(db);\n\n            const pages = Object.entries(pageSessions).map(([, sessions]: any) => {\n                return {\n                    ...sessions[0],\n                    sessions: pagesService.addSessionDiffFromToday(sessions)\n                }\n            });\n\n            pagesService.sortPages(pages);\n            \n            setDb(pages);\n            setFilteredPages(pages);\n        }\n    }, [db, setDb]);\n\n    const viewPageInfo = () => {\n\n    };\n\n    const allPages = (\n        <>\n            <TextField\n                fullWidth\n                autoComplete=\"off\"\n                className=\"searchBox\"\n                id=\"outlined-secondary\"\n                label=\"Search Pages\"\n                variant=\"outlined\"\n                onChange={(event: any) => {\n                    const searchTxt = event.target.value.toLowerCase();\n\n                    const _filteredPages = db.filter((page: any) => {\n                        const pageTitle = page.title.toLowerCase();\n                        const sectionName = page.sectionName.toLowerCase();\n                        const sessions = page.sessions;\n                        return utilsService.containsWord(pageTitle, searchTxt) || utilsService.containsWord(sectionName, searchTxt) || sessions.find((section: any) => section.daysDiffFromToday === Number(searchTxt))\n                    });\n\n                    setFilteredPages(_filteredPages);\n                }}\n            />\n            \n\n            <PageList keyProp='pageId' viewPageInfo={viewPageInfo} filteredPages={filteredPages}></PageList>\n        </>\n    );\n\n    return (\n        <>\n            <Layout\n                hideNavDrawer={true}\n                routeInfo={routerService.getRouteInfo('recentlyRevisedPages')}>\n                {\n                    loading ? (<LinearProgress color=\"secondary\" />) : allPages\n                }\n            </Layout>\n        </>\n    );\n});","import Notebooks from './Notebooks/Notebooks';\nimport Login from './Login/Login';\nimport Sections from './Sections/Sections';\nimport Pages from './Pages/Pages';\nimport Timer from './Timer/Timer';\nimport RecentlyRevisedPages from './RecentlyRevisedPages/Pages';\nimport RecentlyEditedPages from './RecentlyEditedPages/Pages';\n\nexport default {\n    Login,\n    Notebooks,\n    Sections,\n    Pages,\n    Timer,\n    RecentlyRevisedPages,\n    RecentlyEditedPages\n};","import React, { useLayoutEffect } from 'react';\nimport Layout from '../../components/layout/layout';\nimport { routeConfig } from '../../services/config';\nimport mons from '../../services/microsoft-one-note.service';\nimport { routerService, userService } from '../../services';\nimport './login.scss';\n\n\nexport default (props: any) => {\n    useLayoutEffect(() => {\n        if (userService.isLoggedIn()) {\n            routerService.goTo('notebooks');\n        }\n    }, [props.history]);\n\n    function onSignInSuccess() {\n        routerService.goTo('notebooks');\n        // props.history.push(routeConfig.notebooks.path)\n    }\n\n    return (\n        <>\n            <Layout hideNavDrawer={true} routeInfo={routerService.getRouteInfo('login')}>\n                <div className=\"msal-login-btn\" onClick={() => mons.onSignIn().then(onSignInSuccess)}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"215\" height=\"41\" viewBox=\"0 0 215 41\"><title>MS-SymbolLockup</title><rect width=\"215\" height=\"41\" fill=\"#fff\"/><path d=\"M214,1V40H1V1H214m1-1H0V41H215V0Z\" fill=\"#8c8c8c\"/><path d=\"M45.812,25.082V23.288a2.849,2.849,0,0,0,.576.4,4.5,4.5,0,0,0,.707.3,5.513,5.513,0,0,0,.747.187,3.965,3.965,0,0,0,.688.065,2.937,2.937,0,0,0,1.637-.365,1.2,1.2,0,0,0,.538-1.062,1.16,1.16,0,0,0-.179-.649,1.928,1.928,0,0,0-.5-.5,5.355,5.355,0,0,0-.757-.435q-.437-.209-.935-.436c-.356-.19-.687-.383-1-.578a4.358,4.358,0,0,1-.8-.648,2.728,2.728,0,0,1-.534-.8,2.6,2.6,0,0,1-.194-1.047,2.416,2.416,0,0,1,.333-1.285,2.811,2.811,0,0,1,.879-.9,4.026,4.026,0,0,1,1.242-.528,5.922,5.922,0,0,1,1.42-.172,5.715,5.715,0,0,1,2.4.374v1.721a3.832,3.832,0,0,0-2.3-.645,4.106,4.106,0,0,0-.773.074,2.348,2.348,0,0,0-.689.241,1.5,1.5,0,0,0-.494.433,1.054,1.054,0,0,0-.19.637,1.211,1.211,0,0,0,.146.608,1.551,1.551,0,0,0,.429.468,4.276,4.276,0,0,0,.688.414c.271.134.584.28.942.436q.547.285,1.036.6a4.881,4.881,0,0,1,.856.7,3.015,3.015,0,0,1,.586.846,2.464,2.464,0,0,1,.217,1.058,2.635,2.635,0,0,1-.322,1.348,2.608,2.608,0,0,1-.868.892,3.82,3.82,0,0,1-1.257.5,6.988,6.988,0,0,1-1.5.155c-.176,0-.392-.014-.649-.04s-.518-.067-.787-.117a7.772,7.772,0,0,1-.761-.187A2.4,2.4,0,0,1,45.812,25.082Z\" fill=\"#5e5e5e\"/><path d=\"M55.129,16.426a1.02,1.02,0,0,1-.714-.272.89.89,0,0,1-.3-.688.916.916,0,0,1,.3-.7,1.008,1.008,0,0,1,.714-.278,1.039,1.039,0,0,1,.732.278.909.909,0,0,1,.3.7.9.9,0,0,1-.3.678A1.034,1.034,0,0,1,55.129,16.426Zm.842,9.074h-1.7V18h1.7Z\" fill=\"#5e5e5e\"/><path d=\"M65.017,24.9q0,4.131-4.153,4.131a6.187,6.187,0,0,1-2.556-.491V26.986a4.726,4.726,0,0,0,2.337.7,2.342,2.342,0,0,0,2.672-2.628V24.24h-.029a2.947,2.947,0,0,1-4.742.436,4.041,4.041,0,0,1-.838-2.684,4.738,4.738,0,0,1,.9-3.04,3,3,0,0,1,2.476-1.128,2.384,2.384,0,0,1,2.2,1.216h.029V18h1.7Zm-1.684-2.835v-.973a1.91,1.91,0,0,0-.524-1.352A1.718,1.718,0,0,0,61.5,19.18a1.793,1.793,0,0,0-1.512.714,3.217,3.217,0,0,0-.546,2,2.774,2.774,0,0,0,.524,1.769,1.678,1.678,0,0,0,1.387.662,1.805,1.805,0,0,0,1.429-.632A2.391,2.391,0,0,0,63.333,22.064Z\" fill=\"#5e5e5e\"/><path d=\"M73.908,25.5h-1.7V21.273q0-2.1-1.486-2.1a1.622,1.622,0,0,0-1.282.582,2.162,2.162,0,0,0-.5,1.469V25.5H67.229V18h1.707v1.245h.029A2.673,2.673,0,0,1,71.4,17.824a2.265,2.265,0,0,1,1.868.795,3.57,3.57,0,0,1,.644,2.3Z\" fill=\"#5e5e5e\"/><path d=\"M80.962,16.426a1.02,1.02,0,0,1-.714-.272.89.89,0,0,1-.3-.688.916.916,0,0,1,.3-.7,1.008,1.008,0,0,1,.714-.278,1.039,1.039,0,0,1,.732.278.909.909,0,0,1,.3.7.9.9,0,0,1-.3.678A1.034,1.034,0,0,1,80.962,16.426ZM81.8,25.5H80.1V18h1.7Z\" fill=\"#5e5e5e\"/><path d=\"M90.7,25.5H89V21.273q0-2.1-1.486-2.1a1.622,1.622,0,0,0-1.282.582,2.157,2.157,0,0,0-.506,1.469V25.5H84.023V18H85.73v1.245h.03a2.673,2.673,0,0,1,2.431-1.421,2.265,2.265,0,0,1,1.868.795,3.57,3.57,0,0,1,.644,2.3Z\" fill=\"#5e5e5e\"/><path d=\"M106.984,18l-2.212,7.5h-1.78l-1.361-5.083a3.215,3.215,0,0,1-.1-.659H101.5a3.069,3.069,0,0,1-.131.644l-1.48,5.1H98.145L95.939,18H97.7l1.363,5.405a3.16,3.16,0,0,1,.087.645H99.2a3.384,3.384,0,0,1,.117-.659L100.832,18h1.6l1.347,5.428a3.732,3.732,0,0,1,.095.644h.052a3.387,3.387,0,0,1,.11-.644L105.365,18Z\" fill=\"#5e5e5e\"/><path d=\"M109.1,16.426a1.018,1.018,0,0,1-.714-.272.886.886,0,0,1-.3-.688.912.912,0,0,1,.3-.7,1.006,1.006,0,0,1,.714-.278,1.039,1.039,0,0,1,.732.278.912.912,0,0,1,.3.7.9.9,0,0,1-.3.678A1.034,1.034,0,0,1,109.1,16.426Zm.841,9.074h-1.7V18h1.7Z\" fill=\"#5e5e5e\"/><path d=\"M116.117,25.42a2.955,2.955,0,0,1-1.31.248q-2.182,0-2.183-2.094V19.333h-1.253V18h1.253V16.264l1.7-.483V18h1.794v1.333h-1.794v3.75a1.484,1.484,0,0,0,.241.952,1.006,1.006,0,0,0,.807.285,1.167,1.167,0,0,0,.746-.248Z\" fill=\"#5e5e5e\"/><path d=\"M124.248,25.5h-1.7V21.4q0-2.226-1.487-2.226a1.556,1.556,0,0,0-1.26.644,2.568,2.568,0,0,0-.513,1.649V25.5h-1.707V14.4h1.707v4.849h.029a2.685,2.685,0,0,1,2.432-1.421q2.5,0,2.5,3.055Z\" fill=\"#5e5e5e\"/><path d=\"M141.907,25.5h-1.728V18.7q0-.835.1-2.043h-.029a6.992,6.992,0,0,1-.285.988L136.831,25.5h-1.2l-3.143-7.793a7.236,7.236,0,0,1-.277-1.047h-.029q.057.63.058,2.058V25.5h-1.611V15h2.453l2.762,7a10.884,10.884,0,0,1,.41,1.2h.036c.181-.551.327-.962.44-1.23L139.541,15h2.366Z\" fill=\"#5e5e5e\"/><path d=\"M145.158,16.426a1.022,1.022,0,0,1-.714-.272.89.89,0,0,1-.3-.688.916.916,0,0,1,.3-.7,1.009,1.009,0,0,1,.714-.278,1.043,1.043,0,0,1,.733.278.911.911,0,0,1,.3.7.9.9,0,0,1-.3.678A1.038,1.038,0,0,1,145.158,16.426ZM146,25.5h-1.7V18H146Z\" fill=\"#5e5e5e\"/><path d=\"M153.589,25.156a4.2,4.2,0,0,1-2.131.52,3.606,3.606,0,0,1-2.695-1.044,3.691,3.691,0,0,1-1.026-2.706,4.07,4.07,0,0,1,1.1-2.978,3.944,3.944,0,0,1,2.948-1.124,4.3,4.3,0,0,1,1.81.36v1.582a2.743,2.743,0,0,0-1.67-.586,2.32,2.32,0,0,0-1.766.728,2.665,2.665,0,0,0-.688,1.908,2.536,2.536,0,0,0,.648,1.838,2.3,2.3,0,0,0,1.739.674,2.716,2.716,0,0,0,1.729-.652Z\" fill=\"#5e5e5e\"/><path d=\"M159.625,19.619a1.4,1.4,0,0,0-.887-.242,1.513,1.513,0,0,0-1.259.682,3.04,3.04,0,0,0-.506,1.852V25.5h-1.7V18h1.7v1.545H157a2.606,2.606,0,0,1,.766-1.233,1.724,1.724,0,0,1,1.154-.444,1.432,1.432,0,0,1,.7.14Z\" fill=\"#5e5e5e\"/><path d=\"M164.02,25.676a3.719,3.719,0,0,1-2.773-1.051,3.8,3.8,0,0,1-1.036-2.787,3.7,3.7,0,0,1,3.991-4.014,3.6,3.6,0,0,1,2.739,1.033,3.986,3.986,0,0,1,.982,2.864,3.932,3.932,0,0,1-1.059,2.875A3.8,3.8,0,0,1,164.02,25.676Zm.08-6.5a1.938,1.938,0,0,0-1.575.7,2.913,2.913,0,0,0-.579,1.919,2.744,2.744,0,0,0,.586,1.856,1.965,1.965,0,0,0,1.568.678,1.87,1.87,0,0,0,1.542-.666,2.956,2.956,0,0,0,.538-1.9,3,3,0,0,0-.538-1.911A1.858,1.858,0,0,0,164.1,19.18Z\" fill=\"#5e5e5e\"/><path d=\"M169.182,25.266V23.691a3.392,3.392,0,0,0,2.1.725q1.539,0,1.538-.908a.714.714,0,0,0-.132-.436,1.241,1.241,0,0,0-.355-.318,2.784,2.784,0,0,0-.527-.25q-.3-.108-.677-.248a7.052,7.052,0,0,1-.832-.389,2.545,2.545,0,0,1-.615-.465,1.745,1.745,0,0,1-.37-.59,2.145,2.145,0,0,1-.125-.769,1.775,1.775,0,0,1,.256-.955,2.223,2.223,0,0,1,.69-.7,3.289,3.289,0,0,1,.98-.425,4.511,4.511,0,0,1,1.136-.143,5.181,5.181,0,0,1,1.86.315v1.487a3.136,3.136,0,0,0-1.816-.542,2.317,2.317,0,0,0-.582.066,1.472,1.472,0,0,0-.443.183.886.886,0,0,0-.286.282.669.669,0,0,0-.1.363.77.77,0,0,0,.1.41.93.93,0,0,0,.3.3,2.654,2.654,0,0,0,.483.234q.282.105.649.23a9.4,9.4,0,0,1,.867.4,2.886,2.886,0,0,1,.656.465,1.806,1.806,0,0,1,.417.6,2.034,2.034,0,0,1,.147.81,1.847,1.847,0,0,1-.264,1,2.205,2.205,0,0,1-.7.7,3.292,3.292,0,0,1-1.015.413,5.222,5.222,0,0,1-1.212.136A5.115,5.115,0,0,1,169.182,25.266Z\" fill=\"#5e5e5e\"/><path d=\"M179.443,25.676a3.717,3.717,0,0,1-2.772-1.051,3.793,3.793,0,0,1-1.036-2.787,3.7,3.7,0,0,1,3.991-4.014,3.6,3.6,0,0,1,2.739,1.033,3.986,3.986,0,0,1,.982,2.864,3.932,3.932,0,0,1-1.059,2.875A3.8,3.8,0,0,1,179.443,25.676Zm.08-6.5a1.936,1.936,0,0,0-1.574.7,2.908,2.908,0,0,0-.579,1.919,2.739,2.739,0,0,0,.586,1.856,1.964,1.964,0,0,0,1.567.678,1.868,1.868,0,0,0,1.542-.666,2.95,2.95,0,0,0,.539-1.9,2.99,2.99,0,0,0-.539-1.911A1.857,1.857,0,0,0,179.523,19.18Z\" fill=\"#5e5e5e\"/><path d=\"M189.067,15.781a1.533,1.533,0,0,0-.784-.2q-1.237,0-1.237,1.4V18h1.743v1.333h-1.736V25.5h-1.7V19.333h-1.282V18h1.282V16.784a2.362,2.362,0,0,1,.777-1.871,2.82,2.82,0,0,1,1.94-.684,2.879,2.879,0,0,1,1,.138Z\" fill=\"#5e5e5e\"/><path d=\"M194.23,25.42a2.955,2.955,0,0,1-1.31.248q-2.182,0-2.183-2.094V19.333h-1.253V18h1.253V16.264l1.7-.483V18h1.793v1.333h-1.793v3.75a1.484,1.484,0,0,0,.241.952,1,1,0,0,0,.806.285,1.165,1.165,0,0,0,.746-.248Z\" fill=\"#5e5e5e\"/><rect x=\"13\" y=\"11\" width=\"9\" height=\"9\" fill=\"#f25022\"/><rect x=\"13\" y=\"21\" width=\"9\" height=\"9\" fill=\"#00a4ef\"/><rect x=\"23\" y=\"11\" width=\"9\" height=\"9\" fill=\"#7fba00\"/><rect x=\"23\" y=\"21\" width=\"9\" height=\"9\" fill=\"#ffb900\"/></svg>\n                </div>\n            </Layout>\n        </>\n    );\n};\n","import './_pages.module.scss';\nimport React, { useEffect, useState } from 'react';\nimport withAuth from '../../HOCs/withAuth';\nimport { TextField, LinearProgress } from '@material-ui/core';\nimport Layout from '../../components/layout/layout';\nimport routerService from '../../services/route.service';\nimport usePages from './usePages';\nimport PageList from '../../components/pagesList/pagesList';\nimport pagesService from '../../services/pages.service';\nimport useDb from '../../hooks/useDB';\nimport utilsService from '../../services/utils.service';\n\nexport default withAuth((props: any) => {\n    const [pages, pagesLoading] = usePages();\n    const [filteredPages, setFilteredPages]: [any, any] = useState([]);\n    const [db, dbLoading] = useDb();\n    const timerUrl = routerService.getRouteUrl('timer');\n    \n    useEffect(() => {\n        if(db && pages){\n            const pageSessions = pagesService.getSessionsFromDB(db);\n            \n            const _pages = pages.map((page: any) => {\n                page.sessions = pageSessions[page.title] || [];\n                page.sessions = page.sessions.filter((session: any) => session.repetition === 'Yes');\n                pagesService.addSessionDiffFromToday(page.sessions);\n                return page;\n            });\n\n            setFilteredPages(_pages);\n        }\n    }, [pages, db]);\n\n    const viewPageInfo = (page: any) => {\n        routerService.gotoUrl(`${timerUrl}?pageUrl=${encodeURIComponent(page.self)}`);\n    };\n\n    const allPages = (\n        <>\n            <TextField\n                fullWidth\n                autoComplete=\"off\"\n                className=\"searchBox\"\n                id=\"outlined-secondary\"\n                label=\"Search Pages\"\n                variant=\"outlined\"\n                onChange={(event: any) => {\n                    const searchTxt = event.target.value.toLowerCase();\n\n                    const _filteredPages = pages.filter((page: any) => {\n                        const pageTitle = page.title.toLowerCase();\n                        const sectionName = page.parentSection.displayName.toLowerCase();\n                        const sessions = page.sessions;\n                        \n                        return utilsService.containsWord(pageTitle, searchTxt) || utilsService.containsWord(sectionName, searchTxt) || sessions.find((section: any) => section.daysDiffFromToday === Number(searchTxt))\n                    });\n\n                    setFilteredPages(_filteredPages);\n                }}\n            />\n\n\n            <PageList keyProp='id' viewPageInfo={viewPageInfo} filteredPages={filteredPages}></PageList>\n        </>\n    );\n\n    return (\n        <>\n            <Layout\n                hideNavDrawer={true}\n                routeInfo={routerService.getRouteInfo('recentlyCreatedPages')}>\n                {\n                    dbLoading || pagesLoading ? (<LinearProgress color=\"secondary\" />) : allPages\n                }\n            </Layout>\n        </>\n    );\n});","import { useEffect, useState } from \"react\";\nimport mons from '../../services/microsoft-one-note.service';\n\nexport default () => {\n    let [pages, setPages] = useState();\n    let [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        mons.getAllPages().then((allPages: any) => {\n            setPages(allPages);\n        }).finally(() => {\n            setLoading(false);\n        });\n    }, []);\n    \n    return [pages, loading];\n};","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Screens from './screens';\nimport { routeConfig } from './services/config';\nimport './shared/global.scss';\n\nconst App: React.FC = () => {\n  document.title = \"Spaced repetition for one note\";\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path={routeConfig.notebooks.path} exact component={Screens.Notebooks} />\n        <Route path={routeConfig.login.path} exact component={Screens.Login} />\n        <Route path={routeConfig.sections.path} exact component={Screens.Sections} />\n        <Route path={routeConfig.pages.path} exact component={Screens.Pages} />\n        <Route path={routeConfig.timer.path} exact component={Screens.Timer} />\n        <Route path={routeConfig.recentlyRevisedPages.path} exact component={Screens.RecentlyRevisedPages} />\n        <Route path={routeConfig.recentlyCreatedPages.path} exact component={Screens.RecentlyEditedPages} />\n        <Route path='/auth' exact component={Screens.Timer} />\n        <Redirect to={routeConfig.notebooks.path} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.7d5e5832.svg\";"],"sourceRoot":""}